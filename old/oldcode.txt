\
bool SUFF##vec_valid_at(SUFF##vec_t* vec, int64_t ind)\
{\
    SUFF##elem_t* _curr = vec->front;\
    for (int64_t i = 0; _curr; _curr = _curr->next, ++i) \
    {\
        if (i == ind)\
            return true;\
    }\
    return false;\
}\





\
TDATA SUFF##vec_extract(SUFF##vec_t* vec, SUFF##elem_t* elem)\
{\
    if (elem->prev)\
        elem->prev->next = elem->next;\
    else\
        vec->back = elem->next;\
    if (elem->next)\
        elem->next->prev = elem->prev;\
    else\
        vec->front = elem->prev;\
    TDATA _data = elem->data;\
    free(elem);\
    vec->len--;\
    return _data;\
}\



#define TOKEN_SET_AT(_ind) do {\
		INTERNAL(!tkvec_valid_at(&s_TkVec, _ind));\
		tkvec_set_at(&s_TkVec, _ind, pd->token);\
	} while(0)

#define TOKEN_GET_AT(_ind) do {\
		INTERNAL(!tkvec_valid_at(&s_TkVec, _ind));\
		pd->token = tkvec_get_at(&s_TkVec, _ind);\
	} while(0)

#define TOKEN_POP_AT(_ind) do {\
		INTERNAL(!tkvec_valid_at(&s_TkVec, _ind));\
		pd->token = tkvec_pop_at(&s_TkVec, _ind);\
	} while(0)