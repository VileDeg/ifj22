-0 :: stack_init

-1 :: stack_push
	0: $        UNDEF

-2 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-3 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-4 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-5 :: stack_pop
	0: $        UNDEF

-6 :: stack_push
	0: E        STRING
	1: $        UNDEF

-7 :: stack_pop
	0: $        UNDEF

-8 :: stack_pop

-9 :: stack_clear

-10 :: stack_init

-11 :: stack_push
	0: $        UNDEF

-12 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-13 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-14 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-15 :: stack_pop
	0: $        UNDEF

-16 :: stack_push
	0: E        INT
	1: $        UNDEF

-17 :: stack_pop
	0: $        UNDEF

-18 :: stack_pop

-19 :: stack_clear

-20 :: stack_init

-21 :: stack_push
	0: $        UNDEF

-22 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-23 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-24 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-25 :: stack_pop
	0: $        UNDEF

-26 :: stack_push
	0: E        INT
	1: $        UNDEF

-27 :: stack_pop
	0: $        UNDEF

-28 :: stack_pop

-29 :: stack_clear

-30 :: stack_init

-31 :: stack_push
	0: $        UNDEF

-32 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-33 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-34 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-35 :: stack_pop
	0: $        UNDEF

-36 :: stack_push
	0: E        INT
	1: $        UNDEF

-37 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-38 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-39 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-40 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-41 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-42 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-43 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-44 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-45 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-46 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-47 :: stack_pop
	0: $        UNDEF

-48 :: stack_push
	0: E        INT
	1: $        UNDEF

-49 :: stack_pop
	0: $        UNDEF

-50 :: stack_pop

-51 :: stack_clear

-52 :: stack_init

-53 :: stack_push
	0: $        UNDEF

-54 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-55 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-56 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-57 :: stack_pop
	0: $        UNDEF

-58 :: stack_push
	0: E        STRING
	1: $        UNDEF

-59 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-60 :: stack_push
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-61 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-62 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: .        UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: $        UNDEF

-63 :: stack_pop
	0: REDUCE   UNDEF
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-64 :: stack_pop
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-65 :: stack_push
	0: E        STRING
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-66 :: stack_pop
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-67 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-68 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-69 :: stack_pop
	0: $        UNDEF

-70 :: stack_push
	0: E        STRING
	1: $        UNDEF

-71 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-72 :: stack_push
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-73 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-74 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: .        UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: $        UNDEF

-75 :: stack_pop
	0: REDUCE   UNDEF
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-76 :: stack_pop
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-77 :: stack_push
	0: E        STRING
	1: .        UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: $        UNDEF

-78 :: stack_pop
	0: .        UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: $        UNDEF

-79 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-80 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-81 :: stack_pop
	0: $        UNDEF

-82 :: stack_push
	0: E        STRING
	1: $        UNDEF

-83 :: stack_pop
	0: $        UNDEF

-84 :: stack_pop

-85 :: stack_clear

-86 :: stack_init

-87 :: stack_push
	0: $        UNDEF

-88 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-89 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-90 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-91 :: stack_pop
	0: $        UNDEF

-92 :: stack_push
	0: E        STRING
	1: $        UNDEF

-93 :: stack_pop
	0: $        UNDEF

-94 :: stack_pop

-95 :: stack_clear

-96 :: stack_init

-97 :: stack_push
	0: $        UNDEF

-98 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-99 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-100 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-101 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-102 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-103 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-104 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-105 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-106 :: stack_push
	0: !==      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-107 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: !==      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-108 :: stack_push
	0: null     NULL
	1: REDUCE   UNDEF
	2: !==      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-109 :: stack_pop
	0: REDUCE   UNDEF
	1: !==      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-110 :: stack_pop
	0: !==      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-111 :: stack_push
	0: E        NULL
	1: !==      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-112 :: stack_pop
	0: !==      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-113 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-114 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-115 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-116 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-117 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-118 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-119 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-120 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-121 :: stack_pop
	0: $        UNDEF

-122 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-123 :: stack_pop
	0: $        UNDEF

-124 :: stack_pop

-125 :: stack_clear

-126 :: stack_init

-127 :: stack_push
	0: $        UNDEF

-128 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-129 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-130 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-131 :: stack_pop
	0: $        UNDEF

-132 :: stack_push
	0: E        STRING
	1: $        UNDEF

-133 :: stack_pop
	0: $        UNDEF

-134 :: stack_pop

-135 :: stack_clear

-136 :: stack_init

-137 :: stack_push
	0: $        UNDEF

-138 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-139 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: $        UNDEF

-140 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-141 :: stack_pop
	0: $        UNDEF

-142 :: stack_push
	0: E        STRING
	1: $        UNDEF

-143 :: stack_pop
	0: $        UNDEF

-144 :: stack_pop

-145 :: stack_clear

-146 :: stack_init

-147 :: stack_push
	0: $        UNDEF

-148 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-149 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-150 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-151 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-152 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-153 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-154 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-155 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-156 :: stack_push
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-157 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-158 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: <        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-159 :: stack_pop
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-160 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-161 :: stack_push
	0: E        INT
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-162 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-163 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-164 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-165 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-166 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-167 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-168 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-169 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-170 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-171 :: stack_pop
	0: $        UNDEF

-172 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-173 :: stack_pop
	0: $        UNDEF

-174 :: stack_pop

-175 :: stack_clear

-176 :: stack_init

-177 :: stack_push
	0: $        UNDEF

-178 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-179 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-180 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-181 :: stack_pop
	0: $        UNDEF

-182 :: stack_push
	0: E        INT
	1: $        UNDEF

-183 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-184 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-185 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-186 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-187 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-188 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-189 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-190 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-191 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-192 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-193 :: stack_pop
	0: $        UNDEF

-194 :: stack_push
	0: E        INT
	1: $        UNDEF

-195 :: stack_pop
	0: $        UNDEF

-196 :: stack_pop

-197 :: stack_clear

-198 :: stack_init

-199 :: stack_push
	0: $        UNDEF

-200 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-201 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-202 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-203 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-204 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-205 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-206 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-207 :: stack_push
	0: )        UNDEF
	1: E        STRING
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-208 :: stack_pop
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-209 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-210 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-211 :: stack_pop
	0: $        UNDEF

-212 :: stack_push
	0: E        STRING
	1: $        UNDEF

-213 :: stack_pop
	0: $        UNDEF

-214 :: stack_pop

-215 :: stack_clear

-216 :: stack_init

-217 :: stack_push
	0: $        UNDEF

-218 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-219 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-220 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-221 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-222 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-223 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-224 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-225 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-226 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-227 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-228 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-229 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-230 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-231 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-232 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-233 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-234 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-235 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-236 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-237 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-238 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-239 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-240 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-241 :: stack_pop
	0: $        UNDEF

-242 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-243 :: stack_pop
	0: $        UNDEF

-244 :: stack_pop

-245 :: stack_clear

-246 :: stack_init

-247 :: stack_push
	0: $        UNDEF

-248 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-249 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-250 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-251 :: stack_pop
	0: $        UNDEF

-252 :: stack_push
	0: E        INT
	1: $        UNDEF

-253 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-254 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-255 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-256 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-257 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-258 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-259 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-260 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-261 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-262 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-263 :: stack_pop
	0: $        UNDEF

-264 :: stack_push
	0: E        INT
	1: $        UNDEF

-265 :: stack_pop
	0: $        UNDEF

-266 :: stack_pop

-267 :: stack_clear

-268 :: stack_init

-269 :: stack_push
	0: $        UNDEF

-270 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-271 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-272 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-273 :: stack_pop
	0: $        UNDEF

-274 :: stack_push
	0: E        INT
	1: $        UNDEF

-275 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-276 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-277 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-278 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-279 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-280 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-281 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-282 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-283 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-284 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-285 :: stack_pop
	0: $        UNDEF

-286 :: stack_push
	0: E        INT
	1: $        UNDEF

-287 :: stack_pop
	0: $        UNDEF

-288 :: stack_pop

-289 :: stack_clear

-290 :: stack_init

-291 :: stack_push
	0: $        UNDEF

-292 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-293 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-294 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-295 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-296 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-297 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-298 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-299 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-300 :: stack_push
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-301 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-302 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: >        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-303 :: stack_pop
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-304 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-305 :: stack_push
	0: E        INT
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-306 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-307 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-308 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-309 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-310 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-311 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-312 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-313 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-314 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-315 :: stack_pop
	0: $        UNDEF

-316 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-317 :: stack_pop
	0: $        UNDEF

-318 :: stack_pop

-319 :: stack_clear

-320 :: stack_init

-321 :: stack_push
	0: $        UNDEF

-322 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-323 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-324 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-325 :: stack_pop
	0: $        UNDEF

-326 :: stack_push
	0: E        INT
	1: $        UNDEF

-327 :: stack_pop
	0: $        UNDEF

-328 :: stack_pop

-329 :: stack_clear

-330 :: stack_init

-331 :: stack_push
	0: $        UNDEF

-332 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-333 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-334 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-335 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-336 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-337 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-338 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-339 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-340 :: stack_push
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-341 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-342 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: <        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-343 :: stack_pop
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-344 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-345 :: stack_push
	0: E        INT
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-346 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-347 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-348 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-349 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-350 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-351 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-352 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-353 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-354 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-355 :: stack_pop
	0: $        UNDEF

-356 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-357 :: stack_pop
	0: $        UNDEF

-358 :: stack_pop

-359 :: stack_clear

-360 :: stack_init

-361 :: stack_push
	0: $        UNDEF

-362 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-363 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-364 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-365 :: stack_pop
	0: $        UNDEF

-366 :: stack_push
	0: E        INT
	1: $        UNDEF

-367 :: stack_pop
	0: $        UNDEF

-368 :: stack_pop

-369 :: stack_clear

-370 :: stack_init

-371 :: stack_push
	0: $        UNDEF

-372 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-373 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-374 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-375 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-376 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-377 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-378 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-379 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-380 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-381 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-382 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-383 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-384 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-385 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-386 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-387 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-388 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-389 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-390 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-391 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-392 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-393 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-394 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-395 :: stack_pop
	0: $        UNDEF

-396 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-397 :: stack_pop
	0: $        UNDEF

-398 :: stack_pop

-399 :: stack_clear

-400 :: stack_init

-401 :: stack_push
	0: $        UNDEF

-402 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-403 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-404 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-405 :: stack_pop
	0: $        UNDEF

-406 :: stack_push
	0: E        INT
	1: $        UNDEF

-407 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-408 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-409 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-410 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-411 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-412 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-413 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-414 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-415 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-416 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-417 :: stack_pop
	0: $        UNDEF

-418 :: stack_push
	0: E        INT
	1: $        UNDEF

-419 :: stack_pop
	0: $        UNDEF

-420 :: stack_pop

-421 :: stack_clear

-422 :: stack_init

-423 :: stack_push
	0: $        UNDEF

-424 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-425 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-426 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-427 :: stack_pop
	0: $        UNDEF

-428 :: stack_push
	0: E        INT
	1: $        UNDEF

-429 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-430 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-431 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-432 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-433 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-434 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-435 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-436 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-437 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-438 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-439 :: stack_pop
	0: $        UNDEF

-440 :: stack_push
	0: E        INT
	1: $        UNDEF

-441 :: stack_pop
	0: $        UNDEF

-442 :: stack_pop

-443 :: stack_clear

-444 :: stack_init

-445 :: stack_push
	0: $        UNDEF

-446 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-447 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-448 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-449 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-450 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-451 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-452 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-453 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-454 :: stack_push
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-455 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-456 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: >        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-457 :: stack_pop
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-458 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-459 :: stack_push
	0: E        INT
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-460 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-461 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-462 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-463 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-464 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-465 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-466 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-467 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-468 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-469 :: stack_pop
	0: $        UNDEF

-470 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-471 :: stack_pop
	0: $        UNDEF

-472 :: stack_pop

-473 :: stack_clear

-474 :: stack_init

-475 :: stack_push
	0: $        UNDEF

-476 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-477 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-478 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-479 :: stack_pop
	0: $        UNDEF

-480 :: stack_push
	0: E        INT
	1: $        UNDEF

-481 :: stack_pop
	0: $        UNDEF

-482 :: stack_pop

-483 :: stack_clear

-484 :: stack_init

-485 :: stack_push
	0: $        UNDEF

-486 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-487 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-488 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-489 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-490 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-491 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-492 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-493 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-494 :: stack_push
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-495 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-496 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: <        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-497 :: stack_pop
	0: REDUCE   UNDEF
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-498 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-499 :: stack_push
	0: E        INT
	1: <        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-500 :: stack_pop
	0: <        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-501 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-502 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-503 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-504 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-505 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-506 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-507 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-508 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-509 :: stack_pop
	0: $        UNDEF

-510 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-511 :: stack_pop
	0: $        UNDEF

-512 :: stack_pop

-513 :: stack_clear

-514 :: stack_init

-515 :: stack_push
	0: $        UNDEF

-516 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-517 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-518 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-519 :: stack_pop
	0: $        UNDEF

-520 :: stack_push
	0: E        INT
	1: $        UNDEF

-521 :: stack_pop
	0: $        UNDEF

-522 :: stack_pop

-523 :: stack_clear

-524 :: stack_init

-525 :: stack_push
	0: $        UNDEF

-526 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-527 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-528 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-529 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-530 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-531 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-532 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-533 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-534 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-535 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-536 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-537 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-538 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-539 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-540 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-541 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-542 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-543 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-544 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-545 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-546 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-547 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-548 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-549 :: stack_pop
	0: $        UNDEF

-550 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-551 :: stack_pop
	0: $        UNDEF

-552 :: stack_pop

-553 :: stack_clear

-554 :: stack_init

-555 :: stack_push
	0: $        UNDEF

-556 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-557 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-558 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-559 :: stack_pop
	0: $        UNDEF

-560 :: stack_push
	0: E        INT
	1: $        UNDEF

-561 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-562 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-563 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-564 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-565 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-566 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-567 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-568 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-569 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-570 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-571 :: stack_pop
	0: $        UNDEF

-572 :: stack_push
	0: E        INT
	1: $        UNDEF

-573 :: stack_pop
	0: $        UNDEF

-574 :: stack_pop

-575 :: stack_clear

-576 :: stack_init

-577 :: stack_push
	0: $        UNDEF

-578 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-579 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-580 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-581 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-582 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-583 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-584 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-585 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-586 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-587 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-588 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-589 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-590 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-591 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-592 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-593 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-594 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-595 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-596 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-597 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-598 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-599 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-600 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-601 :: stack_pop
	0: $        UNDEF

-602 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-603 :: stack_pop
	0: $        UNDEF

-604 :: stack_pop

-605 :: stack_clear

-606 :: stack_init

-607 :: stack_push
	0: $        UNDEF

-608 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-609 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-610 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-611 :: stack_pop
	0: $        UNDEF

-612 :: stack_push
	0: E        INT
	1: $        UNDEF

-613 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-614 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-615 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-616 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-617 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-618 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-619 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-620 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-621 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-622 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-623 :: stack_pop
	0: $        UNDEF

-624 :: stack_push
	0: E        INT
	1: $        UNDEF

-625 :: stack_pop
	0: $        UNDEF

-626 :: stack_pop

-627 :: stack_clear

-628 :: stack_init

-629 :: stack_push
	0: $        UNDEF

-630 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-631 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-632 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-633 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-634 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-635 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-636 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-637 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-638 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-639 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-640 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-641 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-642 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-643 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-644 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-645 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-646 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-647 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-648 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-649 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-650 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-651 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-652 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-653 :: stack_pop
	0: $        UNDEF

-654 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-655 :: stack_pop
	0: $        UNDEF

-656 :: stack_pop

-657 :: stack_clear

-658 :: stack_init

-659 :: stack_push
	0: $        UNDEF

-660 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-661 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-662 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-663 :: stack_pop
	0: $        UNDEF

-664 :: stack_push
	0: E        INT
	1: $        UNDEF

-665 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-666 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-667 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-668 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-669 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-670 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-671 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-672 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-673 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-674 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-675 :: stack_pop
	0: $        UNDEF

-676 :: stack_push
	0: E        INT
	1: $        UNDEF

-677 :: stack_pop
	0: $        UNDEF

-678 :: stack_pop

-679 :: stack_clear

-680 :: stack_init

-681 :: stack_push
	0: $        UNDEF

-682 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-683 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-684 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-685 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-686 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-687 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-688 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-689 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-690 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-691 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-692 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-693 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-694 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-695 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-696 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-697 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-698 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-699 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-700 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-701 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-702 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-703 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-704 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-705 :: stack_pop
	0: $        UNDEF

-706 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-707 :: stack_pop
	0: $        UNDEF

-708 :: stack_pop

-709 :: stack_clear

-710 :: stack_init

-711 :: stack_push
	0: $        UNDEF

-712 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-713 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-714 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-715 :: stack_pop
	0: $        UNDEF

-716 :: stack_push
	0: E        INT
	1: $        UNDEF

-717 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-718 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-719 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-720 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-721 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-722 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-723 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-724 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-725 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-726 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-727 :: stack_pop
	0: $        UNDEF

-728 :: stack_push
	0: E        INT
	1: $        UNDEF

-729 :: stack_pop
	0: $        UNDEF

-730 :: stack_pop

-731 :: stack_clear

-732 :: stack_init

-733 :: stack_push
	0: $        UNDEF

-734 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-735 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-736 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-737 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-738 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-739 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-740 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-741 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-742 :: stack_push
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-743 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-744 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-745 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-746 :: stack_pop
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-747 :: stack_push
	0: E        INT
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-748 :: stack_pop
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-749 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-750 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-751 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-752 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-753 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-754 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-755 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-756 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-757 :: stack_pop
	0: $        UNDEF

-758 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-759 :: stack_pop
	0: $        UNDEF

-760 :: stack_pop

-761 :: stack_clear

-762 :: stack_init

-763 :: stack_push
	0: $        UNDEF

-764 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-765 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-766 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-767 :: stack_pop
	0: $        UNDEF

-768 :: stack_push
	0: E        INT
	1: $        UNDEF

-769 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-770 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-771 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-772 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-773 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-774 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-775 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-776 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-777 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-778 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-779 :: stack_pop
	0: $        UNDEF

-780 :: stack_push
	0: E        INT
	1: $        UNDEF

-781 :: stack_pop
	0: $        UNDEF

-782 :: stack_pop

-783 :: stack_clear

-784 :: stack_init

-785 :: stack_push
	0: $        UNDEF

-786 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-787 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-788 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-789 :: stack_pop
	0: $        UNDEF

-790 :: stack_push
	0: E        INT
	1: $        UNDEF

-791 :: stack_pop
	0: $        UNDEF

-792 :: stack_pop

-793 :: stack_clear

-794 :: stack_init

-795 :: stack_push
	0: $        UNDEF

-796 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-797 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-798 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-799 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-800 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-801 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-802 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-803 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-804 :: stack_push
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-805 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-806 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: >        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-807 :: stack_pop
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-808 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-809 :: stack_push
	0: E        INT
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-810 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-811 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-812 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-813 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-814 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-815 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-816 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-817 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-818 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-819 :: stack_pop
	0: $        UNDEF

-820 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-821 :: stack_pop
	0: $        UNDEF

-822 :: stack_pop

-823 :: stack_clear

-824 :: stack_init

-825 :: stack_push
	0: $        UNDEF

-826 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-827 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-828 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-829 :: stack_pop
	0: $        UNDEF

-830 :: stack_push
	0: E        INT
	1: $        UNDEF

-831 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-832 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-833 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-834 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-835 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-836 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-837 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-838 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-839 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-840 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-841 :: stack_pop
	0: $        UNDEF

-842 :: stack_push
	0: E        INT
	1: $        UNDEF

-843 :: stack_pop
	0: $        UNDEF

-844 :: stack_pop

-845 :: stack_clear

-846 :: stack_init

-847 :: stack_push
	0: $        UNDEF

-848 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-849 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-850 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-851 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-852 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-853 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-854 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-855 :: stack_push
	0: )        UNDEF
	1: E        STRING
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-856 :: stack_pop
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-857 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-858 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-859 :: stack_pop
	0: $        UNDEF

-860 :: stack_push
	0: E        STRING
	1: $        UNDEF

-861 :: stack_pop
	0: $        UNDEF

-862 :: stack_pop

-863 :: stack_clear

-864 :: stack_init

-865 :: stack_push
	0: $        UNDEF

-866 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-867 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-868 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-869 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-870 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-871 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-872 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-873 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-874 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-875 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-876 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-877 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-878 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-879 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-880 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-881 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-882 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-883 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-884 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-885 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-886 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-887 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-888 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-889 :: stack_pop
	0: $        UNDEF

-890 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-891 :: stack_pop
	0: $        UNDEF

-892 :: stack_pop

-893 :: stack_clear

-894 :: stack_init

-895 :: stack_push
	0: $        UNDEF

-896 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-897 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-898 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-899 :: stack_pop
	0: $        UNDEF

-900 :: stack_push
	0: E        INT
	1: $        UNDEF

-901 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-902 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-903 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-904 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-905 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-906 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-907 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-908 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-909 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-910 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-911 :: stack_pop
	0: $        UNDEF

-912 :: stack_push
	0: E        INT
	1: $        UNDEF

-913 :: stack_pop
	0: $        UNDEF

-914 :: stack_pop

-915 :: stack_clear

-916 :: stack_init

-917 :: stack_push
	0: $        UNDEF

-918 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-919 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-920 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-921 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-922 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-923 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-924 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-925 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-926 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-927 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-928 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-929 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-930 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-931 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-932 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-933 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-934 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-935 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-936 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-937 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-938 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-939 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-940 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-941 :: stack_pop
	0: $        UNDEF

-942 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-943 :: stack_pop
	0: $        UNDEF

-944 :: stack_pop

-945 :: stack_clear

-946 :: stack_init

-947 :: stack_push
	0: $        UNDEF

-948 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-949 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-950 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-951 :: stack_pop
	0: $        UNDEF

-952 :: stack_push
	0: E        INT
	1: $        UNDEF

-953 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-954 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-955 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-956 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-957 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-958 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-959 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-960 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-961 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-962 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-963 :: stack_pop
	0: $        UNDEF

-964 :: stack_push
	0: E        INT
	1: $        UNDEF

-965 :: stack_pop
	0: $        UNDEF

-966 :: stack_pop

-967 :: stack_clear

-968 :: stack_init

-969 :: stack_push
	0: $        UNDEF

-970 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-971 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-972 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-973 :: stack_pop
	0: $        UNDEF

-974 :: stack_push
	0: E        INT
	1: $        UNDEF

-975 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-976 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-977 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-978 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-979 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-980 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-981 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-982 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-983 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-984 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-985 :: stack_pop
	0: $        UNDEF

-986 :: stack_push
	0: E        INT
	1: $        UNDEF

-987 :: stack_pop
	0: $        UNDEF

-988 :: stack_pop

-989 :: stack_clear

-990 :: stack_init

-991 :: stack_push
	0: $        UNDEF

-992 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-993 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-994 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-995 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-996 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-997 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-998 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-999 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1000 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1001 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1002 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-1003 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1004 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1005 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1006 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1007 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1008 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1009 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1010 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1011 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1012 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1013 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1014 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1015 :: stack_pop
	0: $        UNDEF

-1016 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-1017 :: stack_pop
	0: $        UNDEF

-1018 :: stack_pop

-1019 :: stack_clear

-1020 :: stack_init

-1021 :: stack_push
	0: $        UNDEF

-1022 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1023 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1024 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1025 :: stack_pop
	0: $        UNDEF

-1026 :: stack_push
	0: E        INT
	1: $        UNDEF

-1027 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1028 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1029 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1030 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1031 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1032 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1033 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1034 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1035 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1036 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1037 :: stack_pop
	0: $        UNDEF

-1038 :: stack_push
	0: E        INT
	1: $        UNDEF

-1039 :: stack_pop
	0: $        UNDEF

-1040 :: stack_pop

-1041 :: stack_clear

-1042 :: stack_init

-1043 :: stack_push
	0: $        UNDEF

-1044 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1045 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1046 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1047 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1048 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1049 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1050 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1051 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1052 :: stack_push
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1053 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1054 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-1055 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1056 :: stack_pop
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1057 :: stack_push
	0: E        INT
	1: ===      UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1058 :: stack_pop
	0: ===      UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1059 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1060 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1061 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1062 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1063 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1064 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1065 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1066 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1067 :: stack_pop
	0: $        UNDEF

-1068 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-1069 :: stack_pop
	0: $        UNDEF

-1070 :: stack_pop

-1071 :: stack_clear

-1072 :: stack_init

-1073 :: stack_push
	0: $        UNDEF

-1074 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1075 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1076 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1077 :: stack_pop
	0: $        UNDEF

-1078 :: stack_push
	0: E        INT
	1: $        UNDEF

-1079 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1080 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1081 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1082 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1083 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1084 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1085 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1086 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1087 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1088 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1089 :: stack_pop
	0: $        UNDEF

-1090 :: stack_push
	0: E        INT
	1: $        UNDEF

-1091 :: stack_pop
	0: $        UNDEF

-1092 :: stack_pop

-1093 :: stack_clear

-1094 :: stack_init

-1095 :: stack_push
	0: $        UNDEF

-1096 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1097 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1098 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1099 :: stack_pop
	0: $        UNDEF

-1100 :: stack_push
	0: E        INT
	1: $        UNDEF

-1101 :: stack_pop
	0: $        UNDEF

-1102 :: stack_pop

-1103 :: stack_clear

-1104 :: stack_init

-1105 :: stack_push
	0: $        UNDEF

-1106 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1107 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1108 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1109 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1110 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1111 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1112 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1113 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1114 :: stack_push
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1115 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1116 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: >        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-1117 :: stack_pop
	0: REDUCE   UNDEF
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1118 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1119 :: stack_push
	0: E        INT
	1: >        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1120 :: stack_pop
	0: >        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1121 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1122 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1123 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1124 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1125 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1126 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1127 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1128 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1129 :: stack_pop
	0: $        UNDEF

-1130 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-1131 :: stack_pop
	0: $        UNDEF

-1132 :: stack_pop

-1133 :: stack_clear

-1134 :: stack_init

-1135 :: stack_push
	0: $        UNDEF

-1136 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1137 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1138 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1139 :: stack_pop
	0: $        UNDEF

-1140 :: stack_push
	0: E        INT
	1: $        UNDEF

-1141 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1142 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1143 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1144 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1145 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1146 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1147 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1148 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1149 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1150 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1151 :: stack_pop
	0: $        UNDEF

-1152 :: stack_push
	0: E        INT
	1: $        UNDEF

-1153 :: stack_pop
	0: $        UNDEF

-1154 :: stack_pop

-1155 :: stack_clear

-1156 :: stack_init

-1157 :: stack_push
	0: $        UNDEF

-1158 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1159 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1160 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1161 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1162 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1163 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1164 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1165 :: stack_push
	0: )        UNDEF
	1: E        STRING
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1166 :: stack_pop
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1167 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1168 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1169 :: stack_pop
	0: $        UNDEF

-1170 :: stack_push
	0: E        STRING
	1: $        UNDEF

-1171 :: stack_pop
	0: $        UNDEF

-1172 :: stack_pop

-1173 :: stack_clear

-1174 :: stack_init

-1175 :: stack_push
	0: $        UNDEF

-1176 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1177 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1178 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1179 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1180 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1181 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1182 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1183 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1184 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1185 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1186 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-1187 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1188 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1189 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1190 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1191 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1192 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1193 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1194 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1195 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1196 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1197 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1198 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1199 :: stack_pop
	0: $        UNDEF

-1200 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-1201 :: stack_pop
	0: $        UNDEF

-1202 :: stack_pop

-1203 :: stack_clear

-1204 :: stack_init

-1205 :: stack_push
	0: $        UNDEF

-1206 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1207 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1208 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1209 :: stack_pop
	0: $        UNDEF

-1210 :: stack_push
	0: E        INT
	1: $        UNDEF

-1211 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1212 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1213 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1214 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1215 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1216 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1217 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1218 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1219 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1220 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1221 :: stack_pop
	0: $        UNDEF

-1222 :: stack_push
	0: E        INT
	1: $        UNDEF

-1223 :: stack_pop
	0: $        UNDEF

-1224 :: stack_pop

-1225 :: stack_clear

-1226 :: stack_init

-1227 :: stack_push
	0: $        UNDEF

-1228 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1229 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1230 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1231 :: stack_push
	0: id       STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1232 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1233 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1234 :: stack_push
	0: E        STRING
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1235 :: stack_push_after_top_term
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1236 :: stack_push
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1237 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1238 :: stack_push
	0: string   STRING
	1: REDUCE   UNDEF
	2: ===      UNDEF
	3: E        STRING
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-1239 :: stack_pop
	0: REDUCE   UNDEF
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1240 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1241 :: stack_push
	0: E        STRING
	1: ===      UNDEF
	2: E        STRING
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-1242 :: stack_pop
	0: ===      UNDEF
	1: E        STRING
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-1243 :: stack_pop
	0: E        STRING
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1244 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1245 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1246 :: stack_push
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1247 :: stack_push
	0: )        UNDEF
	1: E        BOOL
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-1248 :: stack_pop
	0: E        BOOL
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-1249 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-1250 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1251 :: stack_pop
	0: $        UNDEF

-1252 :: stack_push
	0: E        BOOL
	1: $        UNDEF

-1253 :: stack_pop
	0: $        UNDEF

-1254 :: stack_pop

-1255 :: stack_clear

-1256 :: stack_init

-1257 :: stack_push
	0: $        UNDEF

-1258 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1259 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1260 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1261 :: stack_pop
	0: $        UNDEF

-1262 :: stack_push
	0: E        INT
	1: $        UNDEF

-1263 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1264 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1265 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1266 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1267 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1268 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1269 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1270 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1271 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1272 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1273 :: stack_pop
	0: $        UNDEF

-1274 :: stack_push
	0: E        INT
	1: $        UNDEF

-1275 :: stack_pop
	0: $        UNDEF

-1276 :: stack_pop

-1277 :: stack_clear

-1278 :: stack_init

-1279 :: stack_push
	0: $        UNDEF

-1280 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1281 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1282 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1283 :: stack_pop
	0: $        UNDEF

-1284 :: stack_push
	0: E        INT
	1: $        UNDEF

-1285 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1286 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1287 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1288 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1289 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1290 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1291 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1292 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1293 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1294 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1295 :: stack_pop
	0: $        UNDEF

-1296 :: stack_push
	0: E        INT
	1: $        UNDEF

-1297 :: stack_pop
	0: $        UNDEF

-1298 :: stack_pop

-1299 :: stack_clear

-1300 :: stack_init

-1301 :: stack_push
	0: $        UNDEF

-1302 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: $        UNDEF

-1303 :: stack_push
	0: id       INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1304 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1305 :: stack_pop
	0: $        UNDEF

-1306 :: stack_push
	0: E        INT
	1: $        UNDEF

-1307 :: stack_push_after_top_term
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1308 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1309 :: stack_push_after_top_term
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1310 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: $        UNDEF

-1311 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1312 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1313 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: $        UNDEF

-1314 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: $        UNDEF

-1315 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-1316 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-1317 :: stack_pop
	0: $        UNDEF

-1318 :: stack_push
	0: E        INT
	1: $        UNDEF

-1319 :: stack_pop
	0: $        UNDEF

-1320 :: stack_pop

-1321 :: stack_clear

