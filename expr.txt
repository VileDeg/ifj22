-0 :: stack_init

-1 :: stack_push
	0: $        UNDEF

-2 :: stack_push
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-3 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-4 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-5 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-6 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-7 :: stack_push
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-8 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: +        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-9 :: stack_pop
	0: REDUCE   UNDEF
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-10 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-11 :: stack_push
	0: E        INT
	1: +        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-12 :: stack_pop
	0: +        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-13 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-14 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-15 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-16 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-17 :: stack_push
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-18 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: -        UNDEF
	3: E        INT
	4: REDUCE   UNDEF
	5: (        UNDEF
	6: REDUCE   UNDEF
	7: $        UNDEF

-19 :: stack_pop
	0: REDUCE   UNDEF
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-20 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-21 :: stack_push
	0: E        INT
	1: -        UNDEF
	2: E        INT
	3: REDUCE   UNDEF
	4: (        UNDEF
	5: REDUCE   UNDEF
	6: $        UNDEF

-22 :: stack_pop
	0: -        UNDEF
	1: E        INT
	2: REDUCE   UNDEF
	3: (        UNDEF
	4: REDUCE   UNDEF
	5: $        UNDEF

-23 :: stack_pop
	0: E        INT
	1: REDUCE   UNDEF
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-24 :: stack_pop
	0: REDUCE   UNDEF
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-25 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-26 :: stack_push
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-27 :: stack_push
	0: )        UNDEF
	1: E        INT
	2: (        UNDEF
	3: REDUCE   UNDEF
	4: $        UNDEF

-28 :: stack_pop
	0: E        INT
	1: (        UNDEF
	2: REDUCE   UNDEF
	3: $        UNDEF

-29 :: stack_pop
	0: (        UNDEF
	1: REDUCE   UNDEF
	2: $        UNDEF

-30 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-31 :: stack_pop
	0: $        UNDEF

-32 :: stack_push
	0: E        INT
	1: $        UNDEF

-33 :: stack_pop
	0: $        UNDEF

-34 :: stack_pop

-35 :: stack_clear

-36 :: stack_init

-37 :: stack_push
	0: $        UNDEF

-38 :: stack_pop

-39 :: stack_clear

-40 :: stack_init

-41 :: stack_push
	0: $        UNDEF

-42 :: stack_pop

-43 :: stack_clear

-44 :: stack_init

-45 :: stack_push
	0: $        UNDEF

-46 :: stack_push
	0: int      INT
	1: REDUCE   UNDEF
	2: $        UNDEF

-47 :: stack_pop
	0: REDUCE   UNDEF
	1: $        UNDEF

-48 :: stack_pop
	0: $        UNDEF

-49 :: stack_push
	0: E        INT
	1: $        UNDEF

-50 :: stack_pop
	0: $        UNDEF

-51 :: stack_pop

-52 :: stack_clear

