--------------------File contents: --------------------

//compiler 0
//
<?php
declare(strict_types=1);

function fun (float $p1, int $p2) : void
{}

fun(1, 0.5);

return 0;


--------------------Rules triggered: --------------------

Current token:                                     prolog          
begin -> <?php declare ( strict_types = 1 ) ; <program> <end>
Current token:                        function     keyword         
program -> function ID ( <params> ) : <func_type> { <statement> } <program>
Current token:                        float        keyword         
type -> float
Current token:                        float        keyword         
params -> <type> $ID <param_n>
Current token:                                     comma           
param_n -> , <params>
Current token:                        int          keyword         
type -> int
Current token:                                     right_bracket   
param_n -> , <params>
Current token:                        void         keyword         
func_type -> void
Current token:                                     right_curly_brac
rvalue -> ID ( <args> )
Current token:                                     right_curly_brac
statement -> ε
Current token:           fun                       ID              
program -> <statement>
Current token:           fun                       ID              
rvalue -> $ID
Current token: 1                                   integer         
args -> <term> <arg_n>
Current token: 1                                   integer         
term -> INT_LITERAL
Current token: 1                                   integer         
statement -> ε
