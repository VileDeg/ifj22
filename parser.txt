--------------------File contents: --------------------

<?php
declare(strict_types=1);
function f(int $x) : int {
    if($x === 0) {
        return 0;
    } else {
        if($x === 1) {
            return 1;
        } else {
            $param1 = $x - 1;
            $param2 = $x - 2;
            $res1 = f($param1);
            $res2 = f($param2);
            return $res1 + $res2;
        }
    }
}
$res = f(9);
write($res, "\n");


--------------------Rules triggered: --------------------

Current token:                                     prolog          
begin -> <?php declare ( strict_types = 1 ) ; <program> <end>
Current token:                        function     keyword         
program -> function ID ( <params> ) : <func_type> { <statement> } <program>
Current token:                        int          keyword         
params -> <type> $ID <param_n>
Current token:                        int          keyword         
type -> int
Current token:                                     right_bracket   
param_n -> , <params>
Current token:                        int          keyword         
func_type -> <type>
Current token:                        int          keyword         
type -> int
Current token:                        if           keyword         
statement -> if ( <expression> ) { <statement> } else { <statement> } <program>
